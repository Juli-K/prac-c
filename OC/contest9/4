#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <limits.h>
#include <string.h>
enum { SIZE = 2 * PATH_MAX + 9 };
int
main(int argc, const char * argv[]) {
    int n = argc - 1;
    const char *d;
    if (!(d = getenv("XDG_RUNTIME_DIR"))) {
        d = getenv("TMPDIR");
        if (!d) {
            d = "/tmp";
        }
    }
    char path[PATH_MAX] = "\0";
    pid_t pid = getpid();
    snprintf(path, PATH_MAX, "%s/name%d.py", d, pid);
    int fd = open(path, O_RDWR | O_CREAT | O_TRUNC, 0700);
    if (fd < 0) {
        exit(1);
    }
    char buf[PATH_MAX] = "\0";
    const char s[] = "#!/usr/bin/env python\nprint(";
    write(fd, s, strlen(s));
    snprintf(buf, PATH_MAX, "%s", argv[1]);
    write(fd, buf, strlen(buf));
    for (int i = 2; i <= n; i++) {
        char num[PATH_MAX] = "\0";
        snprintf(num, PATH_MAX, "*%s", argv[i]);
        write(fd, num, strlen(num));
    }
    const char tmp[] = ")";
    write(fd, tmp, strlen(tmp));
    close(fd);
    char p[SIZE];
    snprintf(p, SIZE, "%s && rm %s", path, path);
    execl("/bin/sh", "sh", "-c", p, NULL);
    _exit(1);
    return 0;
}

