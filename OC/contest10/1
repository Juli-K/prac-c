#include <unistd.h>
#include <stdio.h>
#include <time.h>
#include <sys/wait.h>
#include <stdlib.h>

struct tm *
Time(int fd) {
    wait(NULL);
    dup2(fd, 0);
    close(fd);
    time_t t;
    read(0, &t, sizeof(t));
    struct tm *buf;
    buf = localtime(&t);
    return buf;
}
int
main(int argc, const char * argv[]) {
    int fd[2], pid;
    pipe(fd);
    pid = fork();
    if (pid < 0) {
        _exit(1);
    }
    struct tm *buf;
    if (!pid) {
        pid = fork();
        if (pid < 0) {
            _exit(1);
        }
        if (!pid) {
            pid = fork();
            if (pid < 0) {
                _exit(1);
            }
            if (!pid) {
                close(fd[0]);
                if (dup2(fd[1], 1) == -1) {
                    _exit(1);
                }
                close(fd[1]);
                time_t now = time(NULL);
                write(1, &now, sizeof(now));
                write(1, &now, sizeof(now));
                write(1, &now, sizeof(now));
                exit(0);
            }
            close(fd[1]);
            buf = Time(fd[0]);
            printf("D:%02d\n", buf->tm_mday);
            exit(0);
        }
        close(fd[1]);
        buf = Time(fd[0]);
        printf("M:%02d\n", buf->tm_mon + 1);
        exit(0);
    }
    close(fd[1]);
    buf = Time(fd[0]);
    printf("Y:%d\n", buf->tm_year + 1900);
    return 0;
}
